public class CWE78_OS_Command_Injection__getQueryString_Servlet_66a extends testcasesupport.AbstractTestCaseServlet
{

    public void <init>()
    {
        CWE78_OS_Command_Injection__getQueryString_Servlet_66a r0;

        r0 := @this: CWE78_OS_Command_Injection__getQueryString_Servlet_66a;

        specialinvoke r0.<testcasesupport.AbstractTestCaseServlet: void <init>()>();

        return;
    }

    public void bad(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable
    {
        CWE78_OS_Command_Injection__getQueryString_Servlet_66a r0;
        javax.servlet.http.HttpServletRequest r1;
        javax.servlet.http.HttpServletResponse r2;
        java.lang.String r3, $r5, r7;
        java.util.StringTokenizer $r4;
        boolean $z0, $z1;
        testcases.CWE78_OS_Command_Injection.CWE78_OS_Command_Injection__getQueryString_Servlet_66b $r6;
        java.lang.String[] r9;

        r0 := @this: CWE78_OS_Command_Injection__getQueryString_Servlet_66a;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: javax.servlet.http.HttpServletResponse;

        r7 = "";

        $r4 = new java.util.StringTokenizer;

        $r5 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getQueryString()>();

        specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r5, "&");

     label1:
        $z0 = virtualinvoke $r4.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label3;

        r3 = virtualinvoke $r4.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $z1 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("id=");

        if $z1 == 0 goto label2;

        r7 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>(3);

        goto label3;

     label2:
        goto label1;

     label3:
        r9 = newarray (java.lang.String)[5];

        r9[2] = r7;

        $r6 = new testcases.CWE78_OS_Command_Injection.CWE78_OS_Command_Injection__getQueryString_Servlet_66b;

        specialinvoke $r6.<testcases.CWE78_OS_Command_Injection.CWE78_OS_Command_Injection__getQueryString_Servlet_66b: void <init>()>();

        virtualinvoke $r6.<testcases.CWE78_OS_Command_Injection.CWE78_OS_Command_Injection__getQueryString_Servlet_66b: void badSink(java.lang.String[],javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r9, r1, r2);

        return;
    }

    public void good(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable
    {
        CWE78_OS_Command_Injection__getQueryString_Servlet_66a r0;
        javax.servlet.http.HttpServletRequest r1;
        javax.servlet.http.HttpServletResponse r2;
        testcases.CWE78_OS_Command_Injection.CWE78_OS_Command_Injection__getQueryString_Servlet_66a r3;

        r0 := @this: CWE78_OS_Command_Injection__getQueryString_Servlet_66a;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: javax.servlet.http.HttpServletResponse;

        r3 = (testcases.CWE78_OS_Command_Injection.CWE78_OS_Command_Injection__getQueryString_Servlet_66a) r0;

        specialinvoke r3.<testcases.CWE78_OS_Command_Injection.CWE78_OS_Command_Injection__getQueryString_Servlet_66a: void goodG2B(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r1, r2);

        return;
    }

    private void goodG2B(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable
    {
        CWE78_OS_Command_Injection__getQueryString_Servlet_66a r0;
        javax.servlet.http.HttpServletRequest r1;
        javax.servlet.http.HttpServletResponse r2;
        java.lang.String[] r4;
        testcases.CWE78_OS_Command_Injection.CWE78_OS_Command_Injection__getQueryString_Servlet_66b $r5;

        r0 := @this: CWE78_OS_Command_Injection__getQueryString_Servlet_66a;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: javax.servlet.http.HttpServletResponse;

        r4 = newarray (java.lang.String)[5];

        r4[2] = "foo";

        $r5 = new testcases.CWE78_OS_Command_Injection.CWE78_OS_Command_Injection__getQueryString_Servlet_66b;

        specialinvoke $r5.<testcases.CWE78_OS_Command_Injection.CWE78_OS_Command_Injection__getQueryString_Servlet_66b: void <init>()>();

        virtualinvoke $r5.<testcases.CWE78_OS_Command_Injection.CWE78_OS_Command_Injection__getQueryString_Servlet_66b: void goodG2BSink(java.lang.String[],javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r4, r1, r2);

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.ClassNotFoundException, java.lang.InstantiationException, java.lang.IllegalAccessException
    {
        java.lang.String[] r0;

        r0 := @parameter0: java.lang.String[];

        staticinvoke <testcases.CWE78_OS_Command_Injection.CWE78_OS_Command_Injection__getQueryString_Servlet_66a: void mainFromParent(java.lang.String[])>(r0);

        return;
    }
}

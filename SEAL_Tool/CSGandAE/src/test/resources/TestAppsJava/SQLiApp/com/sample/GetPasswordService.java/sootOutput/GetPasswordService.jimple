public class GetPasswordService extends java.lang.Object
{

    public void <init>()
    {
        GetPasswordService r0;

        r0 := @this: GetPasswordService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.sql.ResultSet getPassword(java.lang.String)
    {
        GetPasswordService r0;
        java.sql.Statement r1;
        java.lang.String r2, r11, r13;
        java.sql.ResultSet r3;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        java.sql.SQLException $r9;
        java.lang.ClassNotFoundException $r10;
        java.sql.Connection r12;

        r0 := @this: GetPasswordService;

        r11 := @parameter0: java.lang.String;

     label1:
        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.mysql.cj.jdbc.Driver");

        r12 = staticinvoke <java.sql.DriverManager: java.sql.Connection getConnection(java.lang.String,java.lang.String,java.lang.String)>("jdbc:mysql://127.0.0.1:3306/javaapp?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC", "root", "TecHa743");

        r1 = interfaceinvoke r12.<java.sql.Connection: java.sql.Statement createStatement()>();

        r13 = staticinvoke <org.apache.commons.lang.StringEscapeUtils: java.lang.String escapeSql(java.lang.String)>(r11);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT password FROM users where user = \'");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r3 = interfaceinvoke r1.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>(r2);

     label2:
        return r3;

     label3:
        $r10 := @caughtexception;

        virtualinvoke $r10.<java.lang.ClassNotFoundException: void printStackTrace()>();

        goto label5;

     label4:
        $r9 := @caughtexception;

        virtualinvoke $r9.<java.sql.SQLException: void printStackTrace()>();

     label5:
        return null;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.sql.SQLException from label1 to label2 with label4;
    }
}

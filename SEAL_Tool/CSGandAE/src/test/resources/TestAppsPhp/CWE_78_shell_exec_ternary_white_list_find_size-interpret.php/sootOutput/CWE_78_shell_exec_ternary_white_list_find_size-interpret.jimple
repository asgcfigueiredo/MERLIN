public class CWE_78_shell_exec_ternary_white_list_find_size-interpret extends jphp.runtime.lang.BaseObject
{
    public static final java.lang.String $FN;
    public static jphp.runtime.env.TraceInfo[] $TRC;
    public static jphp.runtime.Memory[] $MEM;
    public static jphp.runtime.Memory[][] $AMEM;
    public static jphp.runtime.invoke.cache.FunctionCallCache $CALL_FUNC_CACHE;
    public static jphp.runtime.invoke.cache.MethodCallCache $CALL_METH_CACHE;
    public static jphp.runtime.invoke.cache.PropertyCallCache $CALL_PROP_CACHE;
    public static jphp.runtime.invoke.cache.ConstantCallCache $CALL_CONST_CACHE;
    public static jphp.runtime.invoke.cache.ClassCallCache $CALL_CLASS_CACHE;
    public static final java.lang.String $CL;

    public void <init>(jphp.runtime.env.Environment, jphp.runtime.reflection.ClassEntity)
    {
        CWE_78_shell_exec_ternary_white_list_find_size-interpret r0;
        jphp.runtime.env.Environment r1;
        jphp.runtime.reflection.ClassEntity r2;

        r0 := @this: CWE_78_shell_exec_ternary_white_list_find_size-interpret;

        r1 := @parameter0: jphp.runtime.env.Environment;

        r2 := @parameter1: jphp.runtime.reflection.ClassEntity;

        specialinvoke r0.<jphp.runtime.lang.BaseObject: void <init>(jphp.runtime.env.Environment,jphp.runtime.reflection.ClassEntity)>(r1, r2);

        return;
    }

    public static final jphp.runtime.Memory __include(jphp.runtime.env.Environment, jphp.runtime.Memory[], jphp.runtime.memory.ArrayMemory)
    {
        jphp.runtime.env.Environment r0;
        jphp.runtime.Memory[] r1, $r10, $r15, $r26, $r33;
        jphp.runtime.memory.ArrayMemory r2, r3;
        jphp.runtime.Memory r4, r5, r6, $r12, $r13, $r16, $r23, $r29, $r30, $r32, $r34, r36, r37, r38;
        jphp.runtime.env.TraceInfo[] $r7, $r25;
        jphp.runtime.Memory[][] $r8;
        jphp.runtime.invoke.cache.FunctionCallCache $r9, $r27;
        jphp.runtime.env.TraceInfo $r11, $r28;
        boolean $z0;
        java.lang.StringBuilder $r19, $r20, $r21, r35;
        java.lang.String $r22;

        r0 := @parameter0: jphp.runtime.env.Environment;

        r1 := @parameter1: jphp.runtime.Memory[];

        r2 := @parameter2: jphp.runtime.memory.ArrayMemory;

        r3 = staticinvoke <jphp.runtime.memory.ArrayMemory: jphp.runtime.memory.ArrayMemory valueOfRef(jphp.runtime.memory.ArrayMemory)>(r2);

        r36 = (jphp.runtime.Memory) r3;

        r4 = virtualinvoke r36.<jphp.runtime.Memory: jphp.runtime.Memory refOfIndex(java.lang.String)>("ret");

        r37 = (jphp.runtime.Memory) r3;

        r5 = virtualinvoke r37.<jphp.runtime.Memory: jphp.runtime.Memory refOfIndex(java.lang.String)>("tainted");

        r38 = (jphp.runtime.Memory) r3;

        r6 = virtualinvoke r38.<jphp.runtime.Memory: jphp.runtime.Memory refOfIndex(java.lang.String)>("query");

        $r7 = <$php_module_m43ed6e37cd344b199bc622b93ea5b77e: jphp.runtime.env.TraceInfo[] $TRC>;

        $r11 = $r7[0];

        $r8 = <$php_module_m43ed6e37cd344b199bc622b93ea5b77e: jphp.runtime.Memory[][] $AMEM>;

        $r10 = $r8[0];

        $r9 = <$php_module_m43ed6e37cd344b199bc622b93ea5b77e: jphp.runtime.invoke.cache.FunctionCallCache $CALL_FUNC_CACHE>;

        $r12 = staticinvoke <jphp.runtime.invoke.InvokeHelper: jphp.runtime.Memory call(jphp.runtime.env.Environment,jphp.runtime.env.TraceInfo,java.lang.String,java.lang.String,jphp.runtime.Memory[],jphp.runtime.invoke.cache.FunctionCallCache,int)>(r0, $r11, "shell_exec", "shell_exec", $r10, $r9, 0);

        $r13 = staticinvoke <jphp.runtime.Memory: jphp.runtime.Memory __static_fast_toImmutable(jphp.runtime.Memory)>($r12);

        virtualinvoke r5.<jphp.runtime.Memory: jphp.runtime.Memory assign(jphp.runtime.Memory)>($r13);

        $z0 = virtualinvoke r5.<jphp.runtime.Memory: boolean equal(java.lang.String)>("safe1");

        if $z0 == 0 goto label1;

        $r33 = <$php_module_m43ed6e37cd344b199bc622b93ea5b77e: jphp.runtime.Memory[] $MEM>;

        $r34 = $r33[0];

        goto label2;

     label1:
        $r15 = <$php_module_m43ed6e37cd344b199bc622b93ea5b77e: jphp.runtime.Memory[] $MEM>;

        $r34 = $r15[1];

     label2:
        $r16 = staticinvoke <jphp.runtime.Memory: jphp.runtime.Memory __static_fast_toImmutable(jphp.runtime.Memory)>($r34);

        staticinvoke <jphp.runtime.Memory: jphp.runtime.Memory assignRight(jphp.runtime.Memory,jphp.runtime.Memory)>($r16, r5);

        r35 = new java.lang.StringBuilder;

        specialinvoke r35.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("find / size \' ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \'");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        $r23 = staticinvoke <jphp.runtime.memory.StringMemory: jphp.runtime.Memory valueOf(java.lang.String)>($r22);

        virtualinvoke r6.<jphp.runtime.Memory: jphp.runtime.Memory assign(jphp.runtime.Memory)>($r23);

        $r25 = <$php_module_m43ed6e37cd344b199bc622b93ea5b77e: jphp.runtime.env.TraceInfo[] $TRC>;

        $r28 = $r25[1];

        $r26 = newarray (jphp.runtime.Memory)[1];

        $r26[0] = r6;

        $r27 = <$php_module_m43ed6e37cd344b199bc622b93ea5b77e: jphp.runtime.invoke.cache.FunctionCallCache $CALL_FUNC_CACHE>;

        $r29 = staticinvoke <jphp.runtime.invoke.InvokeHelper: jphp.runtime.Memory call(jphp.runtime.env.Environment,jphp.runtime.env.TraceInfo,java.lang.String,java.lang.String,jphp.runtime.Memory[],jphp.runtime.invoke.cache.FunctionCallCache,int)>(r0, $r28, "system", "system", $r26, $r27, 1);

        $r30 = staticinvoke <jphp.runtime.Memory: jphp.runtime.Memory __static_fast_toImmutable(jphp.runtime.Memory)>($r29);

        virtualinvoke r4.<jphp.runtime.Memory: jphp.runtime.Memory assign(jphp.runtime.Memory)>($r30);

        $r32 = <jphp.runtime.Memory: jphp.runtime.Memory UNDEFINED>;

        return $r32;
    }

    static void <clinit>()
    {
        jphp.runtime.env.TraceInfo[] $r0;
        java.lang.String $r1, $r3;
        jphp.runtime.env.TraceInfo $r2, $r4;
        jphp.runtime.Memory[] $r5, $r9;
        jphp.runtime.Memory $r6, $r7, $r10;
        jphp.runtime.Memory[][] $r8;
        jphp.runtime.invoke.cache.FunctionCallCache $r11;
        jphp.runtime.invoke.cache.MethodCallCache $r12;
        jphp.runtime.invoke.cache.ConstantCallCache $r13;
        jphp.runtime.invoke.cache.PropertyCallCache $r14;
        jphp.runtime.invoke.cache.ClassCallCache $r15;

        <CWE_78_shell_exec_ternary_white_list_find_size-interpret: java.lang.String $CL> = "$php_module_m43ed6e37cd344b199bc622b93ea5b77e";

        <CWE_78_shell_exec_ternary_white_list_find_size-interpret: java.lang.String $FN> = "d:\\Alexandra Fig\\Documents\\T\u00e9cnico\\Mestrado\\Tese\\Tese\\Desenvolvimento\\Thesis\\input\\CWE_78_shell_exec_ternary_white_list_find_size-interpret.php";

        $r0 = newarray (jphp.runtime.env.TraceInfo)[2];

        $r1 = <$php_module_m43ed6e37cd344b199bc622b93ea5b77e: java.lang.String $FN>;

        $r2 = staticinvoke <jphp.runtime.env.TraceInfo: jphp.runtime.env.TraceInfo valueOf(java.lang.String,long,long)>($r1, 44L, 11L);

        $r0[0] = $r2;

        $r3 = <$php_module_m43ed6e37cd344b199bc622b93ea5b77e: java.lang.String $FN>;

        $r4 = staticinvoke <jphp.runtime.env.TraceInfo: jphp.runtime.env.TraceInfo valueOf(java.lang.String,long,long)>($r3, 50L, 7L);

        $r0[1] = $r4;

        <$php_module_m43ed6e37cd344b199bc622b93ea5b77e: jphp.runtime.env.TraceInfo[] $TRC> = $r0;

        $r5 = newarray (jphp.runtime.Memory)[2];

        $r6 = staticinvoke <jphp.runtime.memory.StringMemory: jphp.runtime.Memory valueOf(java.lang.String)>("safe1");

        $r5[0] = $r6;

        $r7 = staticinvoke <jphp.runtime.memory.StringMemory: jphp.runtime.Memory valueOf(java.lang.String)>("safe2");

        $r5[1] = $r7;

        <$php_module_m43ed6e37cd344b199bc622b93ea5b77e: jphp.runtime.Memory[] $MEM> = $r5;

        $r8 = newarray (jphp.runtime.Memory[])[1];

        $r9 = newarray (jphp.runtime.Memory)[1];

        $r10 = staticinvoke <jphp.runtime.memory.StringMemory: jphp.runtime.Memory valueOf(java.lang.String)>("cat /tmp/tainted.txt");

        $r9[0] = $r10;

        $r8[0] = $r9;

        <$php_module_m43ed6e37cd344b199bc622b93ea5b77e: jphp.runtime.Memory[][] $AMEM> = $r8;

        $r11 = new jphp.runtime.invoke.cache.FunctionCallCache;

        specialinvoke $r11.<jphp.runtime.invoke.cache.FunctionCallCache: void <init>()>();

        <$php_module_m43ed6e37cd344b199bc622b93ea5b77e: jphp.runtime.invoke.cache.FunctionCallCache $CALL_FUNC_CACHE> = $r11;

        $r12 = new jphp.runtime.invoke.cache.MethodCallCache;

        specialinvoke $r12.<jphp.runtime.invoke.cache.MethodCallCache: void <init>()>();

        <$php_module_m43ed6e37cd344b199bc622b93ea5b77e: jphp.runtime.invoke.cache.MethodCallCache $CALL_METH_CACHE> = $r12;

        $r13 = new jphp.runtime.invoke.cache.ConstantCallCache;

        specialinvoke $r13.<jphp.runtime.invoke.cache.ConstantCallCache: void <init>()>();

        <$php_module_m43ed6e37cd344b199bc622b93ea5b77e: jphp.runtime.invoke.cache.ConstantCallCache $CALL_CONST_CACHE> = $r13;

        $r14 = new jphp.runtime.invoke.cache.PropertyCallCache;

        specialinvoke $r14.<jphp.runtime.invoke.cache.PropertyCallCache: void <init>()>();

        <$php_module_m43ed6e37cd344b199bc622b93ea5b77e: jphp.runtime.invoke.cache.PropertyCallCache $CALL_PROP_CACHE> = $r14;

        $r15 = new jphp.runtime.invoke.cache.ClassCallCache;

        specialinvoke $r15.<jphp.runtime.invoke.cache.ClassCallCache: void <init>()>();

        <$php_module_m43ed6e37cd344b199bc622b93ea5b77e: jphp.runtime.invoke.cache.ClassCallCache $CALL_CLASS_CACHE> = $r15;

        return;
    }
}
